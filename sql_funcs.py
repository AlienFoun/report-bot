from models import *

with db:
    db.create_tables([UserBase, UserReport, AdminConfig])


class SQLfuncs:

    @staticmethod
    def check_user(user_id: int) -> bool:
        """
		–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç
				–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
					user_id (int): Telegram-id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
				–í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:
					True/False (bool): –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
		"""
        rows = UserBase.select(UserBase.user_id).where(UserBase.user_id == user_id)
        for row in rows:
            if user_id == row.user_id:
                return True
        return False

    @staticmethod
    def add_user(user_id: int, user_name: str):
        """
		–§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
				–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
					user_id (int): Telegram-id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		"""
        UserBase.create(user_id=user_id, time1='üïê20:00', time2='üïë22:00', time3='üïí07:00', time4='üïì09:00',
                        isreporttoday='-', user_name=user_name)

    @staticmethod
    def select_users_with_time() -> list:
        """
		–§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –∞ —Ç–∞–∫–∂–µ –æ –≤—Ä–µ–º–µ–Ω–∏ –∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
				–í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:
					rows (list): –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –≤—Ä–µ–º–µ–Ω –∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
		"""
        rows = UserBase.select(UserBase.user_id, UserBase.time1, UserBase.time2, UserBase.time3, UserBase.time4)
        return rows

    @staticmethod
    def get_user_time(user_id: int) -> tuple:
        """
		–§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å–µ—Ö –≤—Ä–µ–º–µ–Ω–∞—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
				–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
					user_id (int): Telegram-id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
				–í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:
					rows (tuple): –ö–æ—Ä—Ç–µ–∂ –≤—Ä–µ–º–µ–Ω —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		"""
        rows = UserBase.get(UserBase.user_id == user_id)
        return rows

    @staticmethod
    def change_user_time(user_id: int, emoji: str, time: str):
        """
		–§—É–Ω–∫—Ü–∏—è –∏–∑–º–µ–Ω—è–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
				–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
					user_id (int): Telegram-id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
					emoji (str): –≠–º–æ–¥–∂–∏, –±–ª–∞–≥–æ–¥–∞—Ä—è –∫–æ—Ç–æ—Ä–æ–º—É –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è, –∫–∞–∫–æ–µ –≤—Ä–µ–º—è –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–æ
					time (str): –ù–æ–≤–æ–µ –≤—Ä–µ–º—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
		"""
        data = {
            'üïê': UserBase.update(time1=time),
            'üïë': UserBase.update(time2=time),
            'üïí': UserBase.update(time3=time),
            'üïì': UserBase.update(time4=time)
        }
        data[emoji].where(UserBase.user_id == user_id).execute()

    @staticmethod
    def get_report_time() -> str:
        """
		–§—É–Ω–∫—Ü–∏—è-–±—É—Ñ–µ—Ä, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Ä–µ–º–µ–Ω–∏, –¥–æ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–¥–∞—Ç—å –æ—Ç—á–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
		–í —Å–ª—É—á–∞–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ç–∞–∫–æ–≤–æ–≥–æ, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –µ–≥–æ –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ - 19:00 –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ
		–í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –≤—Ä–µ–º—è –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –±–∞–∑—ã
				–í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:
					report_time (str): –í—Ä–µ–º—è, –¥–æ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–¥–∞—Ç—å –æ—Ç—á–µ—Ç
		"""
        try:
            rows = AdminConfig.get()
        except:
            rows = ()

        if rows != ():
            return rows.report_time
        AdminConfig.create(report_time='19:00')
        return '19:00'

    @staticmethod
    def set_report(user_id: int):
        """
		–§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Å—Ç–∞–≤–∏–ª –æ—Ç—á–µ—Ç
				–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
					user_id (int): Telegram-id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		"""
        UserBase.update(isreporttoday='+').where(UserBase.user_id == user_id).execute()

    @staticmethod
    def check_report() -> list:
        """
		–§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –æ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –æ—Å—Ç–∞–≤–∏–ª–∏ –æ—Ç—á–µ—Ç –∑–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å
		"""
        rows = UserBase.select(UserBase.user_id).where(UserBase.isreporttoday == '-')
        return rows

    @staticmethod
    def set_default_report():
        """
		–§—É–Ω–∫—Ü–∏—è —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –±—ã–ª –ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω –æ—Ç—á–µ—Ç –∑–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å.
		"""
        UserBase.update(isreporttoday='-').execute()

    @staticmethod
    def add_report(user_id: int, date: str, text: str, time: str):
        """
		–§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –æ—Ç—á–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
				–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
					user_id (int): Telegram-id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
					date (str): –î–∞—Ç–∞, –∑–∞ –∫–æ—Ç–æ—Ä—É—é –æ—Å—Ç–∞–≤–ª–µ–Ω –æ—Ç—á–µ—Ç
					text (str): –¢–µ–∫—Å—Ç –æ—Ç—á–µ—Ç–∞
					time (str): –í—Ä–µ–º—è, –ø–æ—Ç—Ä–∞—á–µ–Ω–æ–µ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
		"""
        UserReport.create(user_id=user_id, report_date=date, report_text=text, report_time=time)

    @staticmethod
    def update_user_name(user_id: int, user_name: str):
        """
		–§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª—è–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –≤—Ä–µ–º—è, –¥–æ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–¥–∞—Ç—å –æ—Ç—á–µ—Ç
				–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
					new_time (str): –ù–æ–≤–æ–µ –≤—Ä–µ–º—è, –¥–æ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–¥–∞—Ç—å –æ—Ç—á–µ—Ç
		"""
        UserBase.update(user_name=user_name).where(UserBase.user_id == user_id).execute()

    @staticmethod
    def check_user_name(user_id: int) -> str:

        row = UserBase.get(UserBase.user_id == user_id)
        return row.user_name


def update_report_time(new_time: str):
    """
	–§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª—è–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –≤—Ä–µ–º—è, –¥–æ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–¥–∞—Ç—å –æ—Ç—á–µ—Ç
			–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
				new_time (str): –ù–æ–≤–æ–µ –≤—Ä–µ–º—è, –¥–æ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–¥–∞—Ç—å –æ—Ç—á–µ—Ç
	"""
    AdminConfig.update(report_time=new_time).execute()
